<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://getsynth.github.io/synth/blog</id>
    <title>Synth - Documentation Blog</title>
    <updated>2021-09-07T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://getsynth.github.io/synth/blog"/>
    <subtitle>Synth - Documentation Blog</subtitle>
    <icon>https://getsynth.github.io/synth/img/getsynth_favicon.png</icon>
    <entry>
        <title type="html"><![CDATA[So you want to mock an API]]></title>
        <id>So you want to mock an API</id>
        <link href="https://getsynth.github.io/synth/synth/blog/2021/09/07/mocking-a-production-api"/>
        <updated>2021-09-07T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This blog post is an overview of a 5 day prototyping journey building a mock API]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Seeding test databases in 2021 - best practices]]></title>
        <id>Seeding test databases in 2021 - best practices</id>
        <link href="https://getsynth.github.io/synth/synth/blog/2021/08/31/seeding-databases-tutorial"/>
        <updated>2021-08-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this tutorial, we'll learn how to design a Prisma data model for a basic message board and how to seed test databases with mock data using open-source tools.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Complex Procedural Rust Macros]]></title>
        <id>Complex Procedural Rust Macros</id>
        <link href="https://getsynth.github.io/synth/synth/blog/2021/08/09/macro"/>
        <updated>2021-08-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this post, we write a procedural macro that generates code to bind functions and types including arbitrary many impl blocks to a scripting language. The problems encountered and techniques learned can be applied to other tasks where complex compile-time analysis that spans multiple macro invocations is required.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why not to use prod data for testing - and what to do instead]]></title>
        <id>Why not to use prod data for testing - and what to do instead</id>
        <link href="https://getsynth.github.io/synth/synth/blog/2021/08/04/test-data"/>
        <updated>2021-08-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Some thoughts on why using prod data for testing is still commonplace and why it is time to change this.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Create PostgreSQL Test Data]]></title>
        <id>How to Create PostgreSQL Test Data</id>
        <link href="https://getsynth.github.io/synth/synth/blog/2021/03/09/postgres-data-gen"/>
        <updated>2021-03-09T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This post covers three different ways to generate test data for your Postgres database]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Create realistic test data for your web app]]></title>
        <id>Create realistic test data for your web app</id>
        <link href="https://getsynth.github.io/synth/synth/blog/2021/03/08/mern"/>
        <updated>2021-03-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this post we're going to explore how we can solve the problem of test data generation using our open-source project, Synth! Synth is a state-of-the-art declarative data generator - you tell Synth what you want your data to look like and Synth will generate that data for you.]]></summary>
    </entry>
</feed>